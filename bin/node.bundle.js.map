{"version":3,"sources":["webpack:///webpack/bootstrap 3924898d04f70caaf285","webpack:///external \"bluebird\"","webpack:///./src/actions.js","webpack:///external \"lodash\"","webpack:///./src/index.js","webpack:///./src/outgoing.js","webpack:///./src/umm.js","webpack:///external \"util\"","webpack:///./src/telegram.js","webpack:///./src/incoming.js","webpack:///external \"lru-cache\"","webpack:///external \"node-telegram-bot-api\"","webpack:///external \"path\"","webpack:///external \"fs\""],"names":["validateChatId","chatId","Error","validateText","text","createText","options","platform","type","raw","createEditMessage","chat_id","message_id","reply_markup","module","exports","path","require","fs","_","Promise","telegram","outgoingPending","pending","outgoingMiddleware","event","next","setValue","args","__id","ts","split","substr","timestamp","parseInt","mid","method","waitDelivery","waitRead","apply","then","config","botToken","required","default","env","init","bp","middlewares","register","name","order","handler","description","forIn","action","sendName","replace","msg","arguments","Date","toISOString","Math","random","resolver","promise","resolve","reject","sendOutgoing","ready","configurator","loadAll","startPolling","handlePromise","res","catch","err","handleText","sendText","handleEditMessageText","sendEditMessage","getUserId","userId","get","PromisifyEvent","_promise","_resolve","_reject","processOutgoing","blocName","instruction","ins","Object","assign","optionsList","pick","prop","isNil","chat","id","strRep","inspect","getTemplates","template","at","umm","registerConnector","templates","TelegramBot","Telegram","bot","connected","logger","info","validateConnection","validateOptions","validateBeforeSending","fromCallback","sendMessage","editMessageText","attachments","file","file_comment","messageEventTypes","actionEventTypes","messagesCache","max","maxAge","preprocessEvent","payload","console","log","from","date","has","alreadyProcessed","set","extractBasics","_handleEvent","eventType","sendIncoming","on","user","data","query_id","message","user_id","map","error"],"mappings":"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","file":"node.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3924898d04f70caaf285","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 0\n// module chunks = 0","const validateChatId = (chatId) => {\n  if (typeof (chatId) !== 'number') {\n    throw new Error('Invalid chat id: ' + chatId);\n  }\n};\n\nconst validateText = (text) => {\n  if (typeof(text) !== 'string' && text !== '') {\n    throw new Error('Text must be a string.');\n  }\n};\n\nconst createText = (chatId, text, options = {}) => {\n  validateChatId(chatId);\n  validateText(text);\n\n  return {\n    platform: 'telegram',\n    type: 'text',\n    text: text,\n    raw: {\n      chatId: chatId,\n      options: options,\n    },\n  };\n};\n\nconst createEditMessage = (text, options = {}) => {\n  return {\n    platform: 'telegram',\n    type: 'edited_message_text',\n    text: text,\n    chat_id: options.chat_id,\n    message_id: options.message_id,\n    reply_markup: options.reply_markup,\n    raw: {},\n  };\n};\n\nmodule.exports = {\n  createText,\n  createEditMessage,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions.js","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 2\n// module chunks = 0","import outgoing from './outgoing';\nimport actions from './actions';\nimport umm from './umm';\n\nconst path = require('path');\nconst fs = require('fs');\nconst _ = require('lodash');\nconst Promise = require('bluebird');\n\nimport Telegram from './telegram';\n\nlet telegram = null;\nconst outgoingPending = outgoing.pending;\n\nconst outgoingMiddleware = (event, next) => {\n  if (event.platform !== 'telegram') {\n    return next();\n  }\n\n  if (!outgoing[event.type]) {\n    return next('Unsupported event type: ' + event.type);\n  }\n\n  const setValue = method => (...args) => {\n    if (event.__id && outgoingPending[event.__id]) {\n\n      if (args && args[0] && args[0].message_id) {\n        let ts = args[0].message_id.split(':')[0];\n        ts = ts && ts.substr(4);\n        outgoingPending[event.__id].timestamp = parseInt(ts);\n        outgoingPending[event.__id].mid = args[0].message_id;\n      }\n\n      if (method === 'resolve' &&\n          (event.raw.waitDelivery || event.raw.waitRead)) {\n        // We skip setting this value because we wait\n      } else {\n        outgoingPending[event.__id][method].apply(null, args);\n        delete outgoingPending[event.__id];\n      }\n    }\n  };\n\n  outgoing[event.type](event, next, telegram).\n      then(setValue('resolve'), setValue('reject'));\n};\n\nmodule.exports = {\n\n  config: {\n    botToken: {type: 'string', required: true, default: '', env: 'TELEGRAM_TOKEN'},\n  },\n\n  init: function(bp, config) {\n    bp.middlewares.register({\n      name: 'telegram.sendMessages',\n      type: 'outgoing',\n      order: 100,\n      handler: outgoingMiddleware,\n      module: 'botpress-telegram',\n      description: 'Sends out messages that targets platform = telegram.' +\n      ' This middleware should be placed at the end as it swallows events once sent.',\n    });\n\n\n    bp.telegram = {};\n    _.forIn(actions, (action, name) => {\n      bp.telegram[name] = actions[name];\n      let sendName = name.replace(/^create/, 'send');\n      bp.telegram[sendName] = Promise.method(function() {\n\n        var msg = action.apply(this, arguments);\n        msg.__id = new Date().toISOString() + Math.random();\n        const resolver = {event: msg};\n\n        const promise = new Promise(function(resolve, reject) {\n          resolver.resolve = resolve;\n          resolver.reject = reject;\n        });\n\n        outgoingPending[msg.__id] = resolver;\n\n        bp.middlewares.sendOutgoing(msg);\n\n        return promise;\n      });\n    });\n\n    umm(bp); // Initialize UMM\n  },\n\n  ready: async function(bp, configurator) {\n\n    const config = await configurator.loadAll();\n\n    telegram = new Telegram(bp, config);\n\n    telegram.startPolling(bp);\n  },\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","const handlePromise = (next, promise) => {\n  return promise.then(res => {\n    next();\n    return res;\n  }).catch(err => {\n    next(err);\n    throw err;\n  });\n};\n\nconst handleText = (event, next, telegram) => {\n  if (event.platform !== 'telegram' || event.type !== 'text') {\n    return next();\n  }\n\n  const chatId = event.raw.chatId;\n  const text = event.text;\n  const options = event.raw.options;\n\n  return handlePromise(next, telegram.sendText(chatId, text, options));\n};\n\nconst handleEditMessageText = (event, next, telegram) => {\n  if (event.platform !== 'telegram' || event.type !== 'edited_message_text') {\n    return next();\n  }\n\n  let options = {\n    message_id: event.message_id,\n    chat_id: event.chat_id,\n    reply_markup: event.reply_markup,\n  };\n\n  return handlePromise(next, telegram.sendEditMessage(event.text, options));\n};\n\nmodule.exports = {\n  'text': handleText,\n  'edited_message_text': handleEditMessageText,\n  pending: {},\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/outgoing.js","import util from 'util';\nimport _ from 'lodash';\nimport Promise from 'bluebird';\nimport actions from './actions';\n\n// TODO Extract this logic directly to botpress's UMM\nfunction getUserId(event) {\n  const userId = _.get(event, 'user.id')\n    || _.get(event, 'user.userId')\n    || _.get(event, 'userId')\n    || _.get(event, 'raw.from.id')\n    || _.get(event, 'raw.userId')\n    || _.get(event, 'raw.user.id');\n\n  if (!userId) {\n    throw new Error('Could not find userId in the incoming event.');\n  }\n\n  return userId;\n}\n\nfunction PromisifyEvent(event) {\n  if (!event._promise) {\n    event._promise = new Promise((resolve, reject) => {\n      event._resolve = resolve;\n      event._reject = reject;\n    });\n  }\n\n  return event;\n}\n\nfunction processOutgoing({ event, blocName, instruction }) {\n  const ins = Object.assign({}, instruction); // Create a shallow copy of the instruction\n\n  ////////\n  // PRE-PROCESSING\n  ////////\n  \n  const optionsList = ['typing'];\n\n  const options = _.pick(instruction, optionsList);\n  \n  for (let prop of optionsList) {\n    delete ins[prop];\n  }\n\n  /////////\n  /// Processing\n  /////////\n\n  if (!_.isNil(instruction.text)) {\n    return actions.createText(event.chat.id, instruction.text, options);\n  }\n\n  ////////////\n  /// POST-PROCESSING\n  ////////////\n  \n  // Nothing to post-process yet\n\n  ////////////\n  /// INVALID INSTRUCTION\n  ////////////\n\n  const strRep = util.inspect(instruction, false, 1);\n  throw new Error(`Unrecognized instruction on Web in bloc '${blocName}': ${strRep}`);\n\n}\n\n////////////\n/// TEMPLATES\n////////////\n\nfunction getTemplates() {\n  return [\n    {\n      type: 'Text - Single message',\n      template: 'block_name_sm:\\n\\  - Text goes here..'\n    },{\n      type: 'Text - Multiple messages',\n      template: 'block_name_mm:\\n  - Text goes here..(1)\\n  - Text goes here..(2)'\n    },{\n      type: 'Text - Random message',\n      template: 'block_name_rm:\\n  - text:\\n    - Text goes here..(1)\\n    - Text goes here..(2)'\n    },{\n      type: 'Typing - Message with typing',\n      template: 'block_name_bm:\\n  - text: Text goes here..(1)\\n    typing: 1000ms'\n    }\n  ];\n}\n\nmodule.exports = bp => {\n  const [umm, registerConnector] = _.at(bp, ['umm', 'umm.registerConnector']);\n\n  umm && registerConnector && registerConnector({\n    platform: 'telegram',\n    processOutgoing: args => processOutgoing(Object.assign({}, args, { bp })),\n    templates: getTemplates()\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/umm.js","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 7\n// module chunks = 0","const TelegramBot = require('node-telegram-bot-api');\nconst Promise = require('bluebird');\n\nimport incoming from './incoming';\n\nclass Telegram {\n  constructor(bp, config) {\n    if (!bp || !config) {\n      throw new Error('You need to specify botpress and config');\n    }\n\n    this.bot = null;\n    this.connected = false;\n    this.bot = new TelegramBot(config.botToken);\n    bp.logger.info('Telegram bot created');\n  }\n\n  setConfig(config) {\n    this.config = Object.assign({}, this.config, config);\n  }\n\n  validateConnection() {\n    if (!this.connected) {\n      throw new Error('You are not connected...');\n    }\n  }\n\n  static validateText(text) {\n    const type = typeof(text);\n    if (type !== 'string') {\n      throw new Error(\n          'Text format is not valid (actual: ' + type + ', required: string)');\n    }\n  }\n\n  static validateChatId(chatId) {\n    const type = typeof(chatId);\n    if (type !== 'number') {\n      throw new Error('Chat id format is not valid (actual: ' + type +\n          ', required: number)');\n    }\n  }\n\n  static validateAttachments(attachments) {\n    const type = typeof(attachments);\n    if (type !== 'object') {\n      throw new Error('Attachments format is not valid (actual: ' + type +\n          ', required: object)');\n    }\n  }\n\n  static validateOptions(options) {\n    const type = typeof(options);\n    if (type !== 'object') {\n      throw new Error('Options format is not valid (actual: ' + type +\n          ', required: object)');\n    }\n  }\n\n  static validateBeforeReaction(options) {\n    if (!(options.file || options.file_comment || options.chat ||\n        options.timestamp)) {\n      throw new Error(\n          'You need to set at least a destination options (file, file_comment, chat, timestamp)...');\n    }\n  }\n\n  validateBeforeSending(chatId, options) {\n    this.validateConnection();\n    Telegram.validateChatId(chatId);\n    Telegram.validateOptions(options);\n  }\n\n  sendText(chatId, text, options) {\n    this.validateBeforeSending(chatId, options);\n    Telegram.validateText(text);\n\n    return Promise.fromCallback(() => {\n      this.bot.sendMessage(chatId, text, options);\n    });\n  }\n\n  sendEditMessage(text, options = {}) {\n    this.validateBeforeSending(options.chat_id, options);\n    Telegram.validateText(text);\n\n    return Promise.fromCallback(() => {\n      this.bot.editMessageText(text, options);\n    });\n  }\n\n  startPolling(bp) {\n    incoming(bp, this);\n    bp.logger.info('Telegram loaded handler');\n    this.bot.startPolling();\n    bp.logger.info('Telegram started polling');\n    this.connected = true;\n  }\n}\n\nmodule.exports = Telegram;\n\n\n\n// WEBPACK FOOTER //\n// ./src/telegram.js","import LRU from 'lru-cache';\n\nconst messageEventTypes = [\n//  'text',\n  'audio',\n  'document',\n  'photo',\n  'sticker',\n  'video',\n  'voice',\n  'contact',\n  'location',\n];\n\nconst actionEventTypes = [\n  'new_chat_participant',\n  'left_chat_participant',\n  'new_chat_title',\n  'new_chat_photo',\n  'delete_chat_photo',\n  'group_chat_created',\n  'edited_message',\n//  'edited_message_text',\n  'edited_message_caption',\n  'channel_post',\n  'edited_channel_post',\n  'edited_channel_post_text',\n  'edited_channel_post_caption,',\n  'inline_query',\n  'chosen_inline_result',\n//  'callback_query',\n];\n\nmodule.exports = (bp, telegram) => {\n  const messagesCache = LRU({\n    max: 10000,\n    maxAge: 60 * 60 * 1000,\n  });\n\n  const preprocessEvent = (payload) => {\n    console.log('preprocessEvent');\n    let mid = `${payload.chat.id}_${payload.from.id}_${payload.date}`;\n    console.log(mid);\n\n    if (mid && !messagesCache.has(mid)) {\n      payload.alreadyProcessed = true;\n    } else {\n      messagesCache.set(mid, true);\n    }\n\n    return payload;\n  };\n\n  const extractBasics = (event) => {\n    return {\n      platform: 'telegram',\n      raw: event,\n    };\n  };\n\n  const _handleEvent = (event, eventType) => {\n    event = {\n      type: eventType,\n      ...extractBasics(preprocessEvent(event))\n    };\n    bp.middlewares.sendIncoming(event);\n  };\n\n  telegram.bot.on('text', event => {\n    bp.middlewares.sendIncoming({\n      type: 'text',\n      chat: event.chat,\n      user: event.from,\n      text: event.text,\n      ...extractBasics(event)\n    });\n  })\n\n  telegram.bot.on('callback_query', event => {\n    bp.middlewares.sendIncoming({\n      type: 'callback_query',\n      data: event.data,\n      query_id: event.id,\n      chat_id: event.message.chat.id,\n      user_id: event.message.from.id,\n      message_id: event.message.message_id,\n      text: 'null',\n      ...extractBasics(event)\n    });\n  });\n\n  messageEventTypes.map((eventType) => {\n    telegram.bot.on(eventType, event => {\n      _handleEvent(event, eventType)\n    });\n  });\n\n  actionEventTypes.map((eventType) => {\n    telegram.bot.on(eventType, event => {\n      _handleEvent(event, eventType)\n    });\n  });\n\n  telegram.bot.on('polling_error', (error) => {\n    console.log(error)\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/incoming.js","module.exports = require(\"lru-cache\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lru-cache\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"node-telegram-bot-api\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"node-telegram-bot-api\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 13\n// module chunks = 0"],"sourceRoot":""}